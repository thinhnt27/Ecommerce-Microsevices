name: dockercompose8279660842975161625
services:
  basket.api:
    build:
      context: Z:\Code\.NET\Ecommerce
      dockerfile: Services/Basket/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings__ConnectionString: basketdb:6379
    image: basketapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8001"
        protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  catalog.api:
    build:
      context: Z:\Code\.NET\Ecommerce
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings__BrandsCollection: Brands
      DatabaseSettings__CollectionName: Products
      DatabaseSettings__ConnectionString: mongodb://catalogdb:27017
      DatabaseSettings__DatabaseName: CatalogDb
      DatabaseSettings__TypesCollection: Types
    image: catalogapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8000"
        protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  discount.api:
    build:
      context: Z:\Code\.NET\Ecommerce
      dockerfile: Services/Discount/Discount.API/Dockerfile
    container_name: discount.api
    depends_on:
      discountdb:
        condition: service_healthy
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings__ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=Password@1;
    image: discountapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8002"
        protocol: tcp
  discountdb:
    container_name: discountdb
    environment:
      POSTGRES_DB: DiscountDb
      POSTGRES_PASSWORD: Password@1
      POSTGRES_USER: admin
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U admin
      timeout: 5s
      interval: 10s
      retries: 5
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@eCommerce.net
      PGADMIN_DEFAULT_PASSWORD: Password@1
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5050"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: pgadmin_data
        target: /root/.pgadmin
        volume: {}
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8000
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 9000
        published: "9090"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
      - type: volume
        source: portainer_data
        target: /data
        volume: {}
networks:
  default:
    name: dockercompose8279660842975161625_default
volumes:
  mongo_data:
    name: dockercompose8279660842975161625_mongo_data
  pgadmin_data:
    name: dockercompose8279660842975161625_pgadmin_data
  portainer_data:
    name: dockercompose8279660842975161625_portainer_data
  postgres_data:
    name: dockercompose8279660842975161625_postgres_data